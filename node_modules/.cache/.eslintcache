[{"/Users/minibook/study/react/CapStone/src/index.js":"1","/Users/minibook/study/react/CapStone/src/App.js":"2","/Users/minibook/study/react/CapStone/src/Pages/OrderResult.js":"3","/Users/minibook/study/react/CapStone/src/Pages/Login.js":"4","/Users/minibook/study/react/CapStone/src/Pages/Signup.js":"5","/Users/minibook/study/react/CapStone/src/Pages/Order.js":"6","/Users/minibook/study/react/CapStone/src/Pages/HandList.js":"7","/Users/minibook/study/react/CapStone/src/Pages/HandInfo.js":"8","/Users/minibook/study/react/CapStone/src/Pages/CompanySignup.js":"9","/Users/minibook/study/react/CapStone/src/Pages/Home.js":"10","/Users/minibook/study/react/CapStone/src/Pages/HandRegist.js":"11","/Users/minibook/study/react/CapStone/src/components/Footer.js":"12","/Users/minibook/study/react/CapStone/src/components/Header.js":"13","/Users/minibook/study/react/CapStone/src/components/OrderHeader.js":"14","/Users/minibook/study/react/CapStone/src/components/BaseBox.js":"15","/Users/minibook/study/react/CapStone/src/components/DoubleBox.js":"16","/Users/minibook/study/react/CapStone/src/components/MyButton.js":"17","/Users/minibook/study/react/CapStone/src/components/CompanyCheck.js":"18","/Users/minibook/study/react/CapStone/src/components/OrderListSecond.js":"19","/Users/minibook/study/react/CapStone/src/components/OrderListFirst.js":"20","/Users/minibook/study/react/CapStone/src/components/UserSignup.js":"21","/Users/minibook/study/react/CapStone/src/components/OrderListResult.js":"22","/Users/minibook/study/react/CapStone/src/components/OrderListItem.js":"23","/Users/minibook/study/react/CapStone/src/components/OrderResultInfo.js":"24","/Users/minibook/study/react/CapStone/src/Pages/MyPage.js":"25"},{"size":205,"mtime":1696491148128,"results":"26","hashOfConfig":"27"},{"size":2238,"mtime":1700216459488,"results":"28","hashOfConfig":"27"},{"size":7357,"mtime":1700423520972,"results":"29","hashOfConfig":"27"},{"size":2720,"mtime":1700459648167,"results":"30","hashOfConfig":"27"},{"size":1496,"mtime":1698820957940,"results":"31","hashOfConfig":"27"},{"size":1797,"mtime":1698992728397,"results":"32","hashOfConfig":"27"},{"size":440,"mtime":1697723483303,"results":"33","hashOfConfig":"27"},{"size":160,"mtime":1697721938488,"results":"34","hashOfConfig":"27"},{"size":5100,"mtime":1698818103849,"results":"35","hashOfConfig":"27"},{"size":1437,"mtime":1696659886264,"results":"36","hashOfConfig":"27"},{"size":5193,"mtime":1698735234859,"results":"37","hashOfConfig":"27"},{"size":1855,"mtime":1700217491634,"results":"38","hashOfConfig":"27"},{"size":1984,"mtime":1700216541949,"results":"39","hashOfConfig":"27"},{"size":1452,"mtime":1697113121438,"results":"40","hashOfConfig":"27"},{"size":320,"mtime":1698735309786,"results":"41","hashOfConfig":"27"},{"size":263,"mtime":1697527186769,"results":"42","hashOfConfig":"27"},{"size":854,"mtime":1698735132426,"results":"43","hashOfConfig":"27"},{"size":3245,"mtime":1698820294540,"results":"44","hashOfConfig":"27"},{"size":5295,"mtime":1698734067751,"results":"45","hashOfConfig":"27"},{"size":1402,"mtime":1698734054953,"results":"46","hashOfConfig":"27"},{"size":3460,"mtime":1698818697915,"results":"47","hashOfConfig":"27"},{"size":1787,"mtime":1700216307008,"results":"48","hashOfConfig":"27"},{"size":1717,"mtime":1700213827246,"results":"49","hashOfConfig":"27"},{"size":2676,"mtime":1700425846362,"results":"50","hashOfConfig":"27"},{"size":3771,"mtime":1700421962759,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"2n1ie2",{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"55"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"55"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"55"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"55"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"55"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"55"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"55"},"/Users/minibook/study/react/CapStone/src/index.js",[],[],["135"],"/Users/minibook/study/react/CapStone/src/App.js",[],[],"/Users/minibook/study/react/CapStone/src/Pages/OrderResult.js",["136","137","138"],[],"import { Box, Grid, Typography } from \"@mui/material\";\n\nimport OrderHeader from \"../components/OrderHeader\";\nimport BaseBox from \"../components/BaseBox\";\nimport { useLocation } from \"react-router-dom\";\nimport DoubleBox from \"../components/DoubleBox\";\nimport OrderListResult from \"../components/OrderListResult\";\nimport { useEffect, useState } from \"react\";\nimport OrderResultInfo from \"../components/OrderResultInfo\";\n\nconst OrderResult = () => {\n  //전달받은 데이터를 서버로부터 전송해 결과를 얻는다.\n  //그 결과를 바탕으로 페이지를 구성한다.\n  // const location = useLocation();\n  // console.log(location);\n\n  const dummyData = [\n    {\n      name: \"fedex\",\n      id: 1,\n      price: 50000,\n      arrivalDate: \"2023-11-10\",\n      corporationEmail: \"fedex@email.com\",\n      corporationTell: \"02-xxxx-xxxx\",\n    },\n    {\n      name: \"handcarry1\",\n      id: 2,\n      price: 60000,\n      arrivalDate: \"2023-11-08\",\n      corporationEmail: \"hand1@email.com\",\n      corporationTell: \"02-xxxx-xxxx\",\n    },\n    {\n      name: \"handcarry2\",\n      id: 3,\n      price: 80000,\n      arrivalDate: \"2023-11-07\",\n      corporationEmail: \"hand2@email.com\",\n      corporationTell: \"02-xxxx-xxxx\",\n    },\n    {\n      name: \"handcarry3\",\n      id: 4,\n      price: 90000,\n      arrivalDate: \"2023-11-12\",\n      corporationEmail: \"hand3@email.com\",\n      corporationTell: \"02-xxxx-xxxx\",\n    },\n    {\n      name: \"handcarry4\",\n      id: 5,\n      price: 100000,\n      arrivalDate: \"2023-11-15\",\n      corporationEmail: \"hand4@email.com\",\n      corporationTell: \"02-xxxx-xxxx\",\n    },\n  ];\n\n  const BestList = [\n    {\n      name: \"handcarry1\",\n      id: 2,\n      price: 60000,\n      arrivalDate: \"2023-11-08\",\n    },\n    {\n      name: \"fedex\",\n      id: 1,\n      price: 50000,\n      arrivalDate: \"2023-11-10\",\n    },\n    {\n      name: \"handcarry2\",\n      id: 3,\n      price: 80000,\n      arrivalDate: \"2023-11-07\",\n    },\n    {\n      name: \"handcarry3\",\n      id: 4,\n      price: 90000,\n      arrivalDate: \"2023-11-12\",\n    },\n    {\n      name: \"handcarry4\",\n      id: 5,\n      price: 100000,\n      arrivalDate: \"2023-11-15\",\n    },\n  ];\n\n  const CheapestList = [\n    {\n      name: \"fedex\",\n      id: 1,\n      price: 50000,\n      arrivalDate: \"2023-11-10\",\n    },\n    {\n      name: \"handcarry1\",\n      id: 2,\n      price: 60000,\n      arrivalDate: \"2023-11-08\",\n    },\n    {\n      name: \"handcarry2\",\n      id: 3,\n      price: 80000,\n      arrivalDate: \"2023-11-07\",\n    },\n    {\n      name: \"handcarry3\",\n      id: 4,\n      price: 90000,\n      arrivalDate: \"2023-11-12\",\n    },\n    {\n      name: \"handcarry4\",\n      id: 5,\n      price: 100000,\n      arrivalDate: \"2023-11-15\",\n    },\n  ];\n\n  const FastestList = [\n    {\n      name: \"handcarry2\",\n      id: 3,\n      price: 80000,\n      arrivalDate: \"2023-11-07\",\n    },\n    {\n      name: \"handcarry1\",\n      id: 2,\n      price: 60000,\n      arrivalDate: \"2023-11-08\",\n    },\n    {\n      name: \"fedex\",\n      id: 1,\n      price: 50000,\n      arrivalDate: \"2023-11-10\",\n    },\n\n    {\n      name: \"handcarry3\",\n      id: 4,\n      price: 90000,\n      arrivalDate: \"2023-11-12\",\n    },\n    {\n      name: \"handcarry4\",\n      id: 5,\n      price: 100000,\n      arrivalDate: \"2023-11-15\",\n    },\n  ];\n\n  const firstOrderData = [\n    //각 정렬 조건에 맞는 첫번째 배송 견적 내용\n    {\n      type: \"Best\",\n      data: BestList[0],\n    },\n    {\n      type: \"Cheapest\",\n      data: CheapestList[0],\n    },\n    {\n      type: \"Fastest\",\n      data: FastestList[0],\n    },\n  ];\n\n  const [selectSorted, setSelectSorted] = useState(\"Best\");\n  //선택된 정렬 기준(Best,Cheapest, Fastest)\n\n  const [selectResultId, setSelectResultId] = useState(-1);\n  //선택된 배송 견적의 회사, 상세 가격 정보 및 컨설팅 안내를 위한 state\n  //OrderListResult에서 견적의 id로 접근할 예정\n  const [resultList, setResultList] = useState(dummyData);\n\n  useEffect(() => {\n    setSelectResultId(-1);\n    if (selectSorted === \"Best\") {\n      setResultList(BestList);\n    } else if (selectSorted === \"Cheapest\") {\n      setResultList(CheapestList);\n    } else {\n      setResultList(FastestList);\n    }\n  }, [selectSorted, setSelectResultId]);\n\n  return (\n    <BaseBox>\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        width=\"100%\"\n        bgcolor=\"primary.main\"\n        pb={3}\n        sx={{\n          boxSizing: \"border-box\",\n        }}\n      >\n        <OrderHeader pageNumber={3} />\n      </Box>\n      <Box display=\"flex\" width=\"100%\">\n        <Box\n          //section1\n          width=\"300px\"\n        ></Box>\n        <Box\n          //section2\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          width=\"600px\"\n        >\n          <Grid\n            container\n            //정렬 기준 section\n            hegiht=\"150px\"\n            ml={3}\n          >\n            {firstOrderData.map((entry) => (\n              <Box\n                key={entry.data.id}\n                mt={3}\n                mb={5}\n                sx={{\n                  width: \"175px\",\n                  borderRight: \"1px solid grey\",\n                }}\n              >\n                <Box\n                  pl={2}\n                  bgcolor={selectSorted === entry.type ? \"primary.main\" : \"\"}\n                  sx={{\n                    borderRadius: \"4px\",\n                    cursor: \"pointer\", // 마우스 오버 시 포인터 모양으로 변경\n                    transition: \"0.2s\", // 부드러운 배경색 변경을 위한 트랜지션\n\n                    \"&:hover\": {\n                      backgroundColor: \"#05203c\",\n                      \".hover-item\": {\n                        // 여기서 'hover-item' 클래스를 가진 하위 요소들의 스타일을 정의합니다.\n                        color: \"white\",\n                      },\n                    },\n                  }}\n                  onClick={() => {\n                    setSelectSorted(entry.type);\n                  }}\n                >\n                  <Typography\n                    className=\"hover-item\"\n                    color={selectSorted === entry.type ? \"white\" : \"#b6b6b6\"}\n                  >\n                    {entry.type}\n                  </Typography>\n                  <Typography\n                    className=\"hover-item\"\n                    color={selectSorted === entry.type ? \"white\" : \"primary\"}\n                    variant=\"h6\"\n                  >\n                    $ {entry.data.price}\n                  </Typography>\n                  <Typography\n                    className=\"hover-item\"\n                    color={selectSorted === entry.type ? \"white\" : \"black\"}\n                  >\n                    {entry.data.arrivalDate}\n                  </Typography>\n                </Box>\n              </Box>\n            ))}\n          </Grid>\n          <OrderListResult\n            resultList={resultList}\n            selectedSort={selectSorted}\n            setSelectResultId={setSelectResultId}\n            selectResultId={selectResultId}\n          />\n        </Box>\n        <Box flexGrow={1}>\n          <OrderResultInfo\n            selectData={dummyData.find((item) => item.id === selectResultId)}\n          />\n        </Box>\n      </Box>\n    </BaseBox>\n  );\n};\n\nexport default OrderResult;\n","/Users/minibook/study/react/CapStone/src/Pages/Login.js",["139"],[],"/Users/minibook/study/react/CapStone/src/Pages/Signup.js",[],[],"/Users/minibook/study/react/CapStone/src/Pages/Order.js",["140"],[],"import { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { Box } from \"@mui/material\";\n\nimport OrderHeader from \"../components/OrderHeader\";\nimport OrderListFirst from \"../components/OrderListFirst\";\nimport OrderListSecond from \"../components/OrderListSecond\";\nimport BaseBox from \"../components/BaseBox\";\n\nconst Order = () => {\n  //pageNumber라는 state를 통해 렌더링되는 컴포넌트를 다르게 한다.\n  //pageNumber가 3이 되면 서버로 전송할 데이터를 결과 페이지로 이동시킨다.\n  //그 다음, 결과 페이지에서 서버로부터 데이터를 요청한다.\n  //전송받은 데이터를 정리해 결과페이지에서 사용자에게 보여준다.\n  const obj = { name: \"n\", age: 33, time: 70 };\n\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const navigate = useNavigate();\n\n  const moveResultPage = () => {\n    navigate(\"/orderresult\", {\n      replace: true,\n      state: {\n        obj, // 정리된 모든 입력 값(state들)이 포함될 예정\n      },\n    });\n  };\n\n  useEffect(() => {\n    if (pageNumber === 3) {\n      moveResultPage();\n    }\n    // 의존성 배열에 pageNumber를 넣어 pageNumber가 변경될 때만 이펙트가 실행되도록 한다.\n  }, [pageNumber]);\n  return (\n    <BaseBox>\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        width=\"100%\"\n        bgcolor=\"primary.main\"\n        pb={3}\n        sx={{\n          boxSizing: \"border-box\",\n        }}\n      >\n        <OrderHeader pageNumber={pageNumber} />\n      </Box>\n      {pageNumber === 1 && <OrderListFirst setPageNumber={setPageNumber} />}\n      {pageNumber === 2 && <OrderListSecond setPageNumber={setPageNumber} />}\n    </BaseBox>\n  );\n};\n\nexport default Order;\n","/Users/minibook/study/react/CapStone/src/Pages/HandList.js",[],[],"/Users/minibook/study/react/CapStone/src/Pages/HandInfo.js",[],[],"/Users/minibook/study/react/CapStone/src/Pages/CompanySignup.js",[],[],"/Users/minibook/study/react/CapStone/src/Pages/Home.js",[],[],"/Users/minibook/study/react/CapStone/src/Pages/HandRegist.js",["141","142"],[],"import {\n  Box,\n  Button,\n  Checkbox,\n  FormControlLabel,\n  FormGroup,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport BaseBox from \"../components/BaseBox\";\nimport DoubleBox from \"../components/DoubleBox\";\nimport MyButton from \"../components/MyButton\";\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\nconst HandRegist = () => {\n  const [signupInfo, setSignupInfo] = useState({\n    name: \"\",\n    corporation: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setSignupInfo((prev) => ({\n      ...prev,\n      [id]: value,\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault(); // form의 기본 제출 동작을 방지합니다.\n    try {\n      const response = await axios.post(\"YOUR_LOGIN_SERVER_URL\", {\n        name: signupInfo.name,\n        corporation: signupInfo.corporation,\n        email: signupInfo.email,\n        password: signupInfo.password,\n      });\n      console.log(\"Server Response:\", response.data);\n\n      // 여기서 필요한 로직(예: 토큰 저장, 리다이렉트 등)을 추가할 수 있습니다.\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      // 로그인 실패 메시지를 사용자에게 보여줄 수 있습니다.\n    }\n  };\n\n  return (\n    <BaseBox component=\"form\" onSubmit={handleSubmit}>\n      <Box>\n        <DoubleBox\n          props1={{\n            mx: \"50px\",\n            my: \"30px\",\n            p: \"15px\",\n            width: \"900px\",\n            borderRadius: \"2%\",\n          }}\n          props2={{ p: 2, borderRadius: \"2%\" }}\n        >\n          <Box my={4} display=\"flex\" height=\"100px\">\n            <Box mx={4} width=\"200px\">\n              <Typography mb={2} fontWeight=\"700\">\n                이름\n              </Typography>\n              <TextField sx={{ mb: 2 }} fullWidth label=\"이름 입력\"></TextField>\n            </Box>\n            <Box mx={4} width=\"200px\">\n              <Typography mb={2} fontWeight=\"700\">\n                출발 국가\n              </Typography>\n              <TextField\n                sx={{ mb: 2 }}\n                fullWidth\n                label=\"출발국가명 입력\"\n              ></TextField>\n            </Box>\n            <Box mx={4} width=\"200px\">\n              <Typography mb={2} fontWeight=\"700\">\n                도착 국가\n              </Typography>\n              <TextField\n                sx={{ mb: 2 }}\n                fullWidth\n                label=\"도착국가명 입력\"\n              ></TextField>\n            </Box>\n          </Box>\n          <Box my={4} display=\"flex\" height=\"100px\">\n            <Box mx={4} width=\"200px\">\n              <Typography mb={2} fontWeight=\"700\">\n                최대 중량\n              </Typography>\n              <TextField sx={{ mb: 2 }} fullWidth label=\"Kg\"></TextField>\n            </Box>\n            <Box mx={4} width=\"200px\">\n              <Typography mb={2} fontWeight=\"700\">\n                최소 비용\n              </Typography>\n              <TextField sx={{ mb: 2 }} fullWidth label=\"Kg당 ()원\"></TextField>\n            </Box>\n            <Box mx={4} width=\"200px\">\n              <Typography mb={2} fontWeight=\"700\">\n                최대 비용\n              </Typography>\n              <TextField sx={{ mb: 2 }} fullWidth label=\"Kg당 ()원\"></TextField>\n            </Box>\n          </Box>\n          <Box my={4} display=\"flex\" height=\"100px\">\n            <Box mx={4}>\n              <Typography mb={2} fontWeight=\"700\">\n                금지 품목\n              </Typography>\n              <FormGroup row>\n                <FormControlLabel\n                  control={<Checkbox name=\"option1\" />}\n                  label=\"책\"\n                />\n                <FormControlLabel\n                  control={<Checkbox name=\"option2\" />}\n                  label=\"식료품\"\n                />\n                <FormControlLabel\n                  control={<Checkbox name=\"option3\" />}\n                  label=\"장신구\"\n                />\n                <FormControlLabel\n                  control={<Checkbox name=\"option3\" />}\n                  label=\"스마트폰\"\n                />\n              </FormGroup>\n            </Box>\n          </Box>\n          <Box my={4} display=\"flex\" height=\"100px\">\n            <Box mx={4} width=\"200px\">\n              <Typography mb={2} fontWeight=\"700\">\n                예상 소요시간\n              </Typography>\n              <TextField sx={{ mb: 2 }} fullWidth label=\"()일\"></TextField>\n            </Box>\n            <Box mx={4} width=\"500px\">\n              <Typography mb={2} fontWeight=\"700\">\n                특이사항\n              </Typography>\n              <TextField sx={{ mb: 2 }} fullWidth></TextField>\n            </Box>\n          </Box>\n        </DoubleBox>\n        <Box display=\"flex\" justifyContent=\"center\">\n          <MyButton\n            type=\"submit\"\n            value=\"등록\"\n            sx={{\n              width: \"100px\",\n              height: \"60px\",\n              fontSize: \"18px\",\n              fontWeight: \"700\",\n            }}\n          />\n        </Box>\n      </Box>\n    </BaseBox>\n  );\n};\n\nexport default HandRegist;\n","/Users/minibook/study/react/CapStone/src/components/Footer.js",[],[],"/Users/minibook/study/react/CapStone/src/components/Header.js",[],[],"/Users/minibook/study/react/CapStone/src/components/OrderHeader.js",[],[],"/Users/minibook/study/react/CapStone/src/components/BaseBox.js",[],[],"/Users/minibook/study/react/CapStone/src/components/DoubleBox.js",[],[],"/Users/minibook/study/react/CapStone/src/components/MyButton.js",[],[],"/Users/minibook/study/react/CapStone/src/components/CompanyCheck.js",[],[],"/Users/minibook/study/react/CapStone/src/components/OrderListSecond.js",["143","144"],[],"import { useState } from \"react\";\n\nimport {\n  Box,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  OutlinedInput,\n  Select,\n  TextField,\n  Typography,\n} from \"@mui/material\";\n\nimport MyButton from \"./MyButton\";\nimport BaseBox from \"./BaseBox\";\nimport DoubleBox from \"./DoubleBox\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\n\nconst OrderListSecond = ({ setPageNumber }) => {\n  //입력받는 변수들 이름 설정 필요, state를 통한 입력 정보 저장 예정\n\n  const [selectedDate, setSelectedDate] = useState(null);\n  return (\n    <BaseBox>\n      <Box mt={5} width=\"900px\">\n        <Typography variant=\"h6\" fontWeight=\"700\">\n          1. 화물정보 입력\n        </Typography>\n        {/*DoubleBox는 회색, 흰색으로 이루어진 박스를 만들기 위해 선언한 임의 컴포넌트*/}\n        <DoubleBox\n          props1={{\n            mx: \"50px\",\n            my: \"30px\",\n            py: \"15px\",\n            px: \"30px\",\n            width: \"700px\",\n          }}\n          props2={{ p: 2, height: \"500px\" }}\n        >\n          <Typography mb={2} fontWeight=\"700\">\n            품명\n          </Typography>\n          <TextField sx={{ mb: 2 }} fullWidth label=\"상세품명 입력\"></TextField>\n          <Box mb={2} display=\"flex\" justifyContent=\"space-between\">\n            <Box>\n              <Typography mb={2} fontWeight=\"700\">\n                카테고리\n              </Typography>\n              <FormControl>\n                <InputLabel>유형 선택</InputLabel>\n                <Select\n                  sx={{ width: \"150px\" }}\n                  input={<OutlinedInput label=\"유형 선택\" />}\n                >\n                  <MenuItem value={1}>유형1</MenuItem>\n                  <MenuItem value={2}>유형2</MenuItem>\n                  <MenuItem value={3}>유형3</MenuItem>\n                </Select>\n              </FormControl>\n            </Box>\n            <Box>\n              <Typography mb={2} fontWeight=\"700\">\n                무게\n              </Typography>\n              <TextField sx={{ width: \"150px\" }} label=\"무게 입력\"></TextField>\n            </Box>\n            <Box>\n              <Typography mb={2} fontWeight=\"700\">\n                무게 단위\n              </Typography>\n              <FormControl>\n                <InputLabel>유형 선택</InputLabel>\n                <Select\n                  sx={{ width: \"150px\" }}\n                  input={<OutlinedInput label=\"단위 선택\" />}\n                >\n                  <MenuItem value={1}>Kg</MenuItem>\n                  <MenuItem value={2}>유형2</MenuItem>\n                  <MenuItem value={3}>유형3</MenuItem>\n                </Select>\n              </FormControl>\n            </Box>\n          </Box>\n          <Box mt={5} mb={2} display=\"flex\" justifyContent=\"space-between\">\n            <Box>\n              <Typography mb={2} fontWeight=\"700\">\n                길이\n              </Typography>\n              <TextField\n                sx={{ width: \"150px\" }}\n                label=\"포장 포함 길이\"\n              ></TextField>\n            </Box>\n            <Box>\n              <Typography mb={2} fontWeight=\"700\">\n                너비\n              </Typography>\n              <TextField\n                sx={{ width: \"150px\" }}\n                label=\"포장 포함 너비\"\n              ></TextField>\n            </Box>\n            <Box>\n              <Typography mb={2} fontWeight=\"700\">\n                높이\n              </Typography>\n              <TextField\n                sx={{ width: \"150px\" }}\n                label=\"포장 포함 높이\"\n              ></TextField>\n            </Box>\n          </Box>\n          <Box>\n            <Typography mb={2} fontWeight=\"700\">\n              길이 측정 단위\n            </Typography>\n            <FormControl>\n              <InputLabel>단위 선택</InputLabel>\n              <Select\n                sx={{ width: \"150px\" }}\n                input={<OutlinedInput label=\"단위 선택\" />}\n              >\n                <MenuItem value={1}>cm</MenuItem>\n                <MenuItem value={2}>유형2</MenuItem>\n                <MenuItem value={3}>유형3</MenuItem>\n              </Select>\n            </FormControl>\n          </Box>\n        </DoubleBox>\n        {/*1번 선택 끝*/}\n        {/*2번 선택*/}\n        <Typography mb={4} variant=\"h6\" fontWeight=\"700\">\n          2. 예상 발송일 입력\n        </Typography>\n        <Box ml={4}>\n          <LocalizationProvider dateAdapter={AdapterDayjs}>\n            <DatePicker label=\"예상 발송일 선택\" />\n          </LocalizationProvider>\n        </Box>\n      </Box>\n      {/*2번 선택 끝*/}\n      {/*버튼*/}\n      <Box width=\"300px\" my={5} display=\"flex\" justifyContent=\"space-between\">\n        <MyButton\n          job=\"negative\"\n          value=\"뒤로 가기\"\n          onClick={() => {\n            setPageNumber(1);\n          }}\n          sx={{ width: \"100px\", height: \"50px\" }}\n        />\n        <MyButton\n          value=\"결과 조회\"\n          onClick={() => {\n            setPageNumber(3);\n          }}\n          sx={{ width: \"100px\", height: \"50px\" }}\n        />\n      </Box>\n    </BaseBox>\n  );\n};\n\nexport default OrderListSecond;\n","/Users/minibook/study/react/CapStone/src/components/OrderListFirst.js",[],[],"/Users/minibook/study/react/CapStone/src/components/UserSignup.js",["145"],[],"import { useNavigate } from \"react-router-dom\";\n\nimport { Box, Button, TextField, Typography, darken } from \"@mui/material\";\n\nimport MyButton from \"../components/MyButton\";\nimport BaseBox from \"../components/BaseBox\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nconst UserSignup = ({ corporation }) => {\n  //corporation props는 회사 인증시 서버로부터 전송받을 예정\n  const [signupInfo, setSignupInfo] = useState({\n    name: \"\",\n    corporation: corporation,\n    email: \"\",\n    password: \"\",\n  });\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setSignupInfo((prev) => ({\n      ...prev,\n      [id]: value,\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault(); // form의 기본 제출 동작을 방지합니다.\n\n    try {\n      const response = await axios.post(\"YOUR_LOGIN_SERVER_URL\", {\n        name: signupInfo.name,\n        corporation: signupInfo.corporation,\n        email: signupInfo.email,\n        password: signupInfo.password,\n      });\n      console.log(\"Server Response:\", response.data);\n\n      // 여기서 필요한 로직(예: 토큰 저장, 리다이렉트 등)을 추가할 수 있습니다.\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      // 로그인 실패 메시지를 사용자에게 보여줄 수 있습니다.\n    }\n  };\n  const navigate = useNavigate();\n  return (\n    <>\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        width=\"500px\"\n        height=\"700px\"\n      >\n        <Box display=\"flex\" alignItems=\"center\" flexDirection=\"column\" mb={8}>\n          <Typography fontWeight=\"700\" variant=\"h5\" color=\"primary\">\n            User Signup\n          </Typography>\n          <Box mt={4}>로고</Box>\n        </Box>\n        <Box component=\"form\" onSubmit={handleSubmit}>\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"corporation\"\n            label=\"Company Name\"\n            disabled\n            value={signupInfo.corporation}\n            onChange={handleChange}\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"Name\"\n            value={signupInfo.name}\n            onChange={handleChange}\n          />\n\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            type=\"email\"\n            label=\"Email\"\n            value={signupInfo.email}\n            onChange={handleChange}\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            value={signupInfo.password}\n            onChange={handleChange}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            sx={{\n              borderRadius: 0,\n              bgcolor: \"#37b3a8\",\n              color: \"white\",\n              \":hover\": { backgroundColor: darken(\"#37b3a8\", 0.1) },\n            }}\n          >\n            Sign Up\n          </Button>\n        </Box>\n        <Box display=\"flex\" pt={4}>\n          <MyButton\n            value=\"Cancel\"\n            job=\"negative\"\n            onClick={() => {\n              navigate(-1);\n            }}\n          />\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default UserSignup;\n","/Users/minibook/study/react/CapStone/src/components/OrderListResult.js",["146","147","148"],[],"import { Box, Icon, Typography } from \"@mui/material\";\nimport OrderListItem from \"./OrderListItem\";\nimport { useEffect, useState } from \"react\";\n\nconst OrderListResult = ({\n  resultList,\n  selectedSort,\n  selectResultId,\n  setSelectResultId,\n}) => {\n  //상위 컴포넌트로부터 결과 리스트를 전달받으면 이 정보를 렌더링해 결과를 보여주는 컴포넌트\n\n  return (\n    <Box width=\"100%\">\n      {resultList.map((data, index) => {\n        if (index === 0) {\n          return (\n            <Box\n              key={data.id}\n              bgcolor=\"#d7191fff\"\n              sx={{\n                p: \"2px\",\n                borderRadius: \"5px\",\n              }}\n            >\n              <Box m={1}>\n                <Typography\n                  fontFamily=\"Nanum Myeongjo\"\n                  fontWeight=\"800\"\n                  color=\"white\"\n                  variant=\"h5\"\n                >\n                  {selectedSort}\n                </Typography>\n              </Box>\n              <OrderListItem\n                data={data}\n                isHighlighted={index === 0} // 첫 번째 요소에 대한 하이라이트 여부\n                setSelectResultId={setSelectResultId}\n                selectResultId={selectResultId}\n              />\n            </Box>\n          );\n        } else {\n          return (\n            <OrderListItem\n              key={data.id}\n              data={data}\n              isHighlighted={index === 0} // 첫 번째 요소에 대한 하이라이트 여부\n              setSelectResultId={setSelectResultId}\n              selectResultId={selectResultId}\n            />\n          );\n        }\n\n        // OrderListItem 컴포넌트를 map 함수 내부에서 사용\n      })}\n    </Box>\n  );\n};\n\nexport default OrderListResult;\n","/Users/minibook/study/react/CapStone/src/components/OrderListItem.js",[],[],"/Users/minibook/study/react/CapStone/src/components/OrderResultInfo.js",["149","150"],[],"/Users/minibook/study/react/CapStone/src/Pages/MyPage.js",["151","152"],[],"import { Box, Divider, Grid, Typography } from \"@mui/material\";\nimport BaseBox from \"../components/BaseBox\";\n\nconst MyPage = () => {\n  return (\n    <BaseBox>\n      <Box my={5}>\n        <Typography fontWeight=\"800\" variant=\"h5\">\n          마이페이지\n        </Typography>\n      </Box>\n      <Box\n        width=\"100%\"\n        display=\"flex\"\n        sx={{\n          borderTop: \"1px solid black\",\n          borderBottom: \"1px solid black\",\n        }}\n      >\n        <Box display=\"flex\" width=\"50%\" sx={{ borderRight: \"1px solid black\" }}>\n          <Box my={5} ml={20} mr={10} display=\"flex\" alignItems=\"center\">\n            <Box\n              sx={{\n                width: \"100px\",\n                height: \"100px\",\n                border: \"1px solid black\",\n              }}\n            ></Box>\n          </Box>\n          <Box\n            ml={4}\n            display=\"flex\"\n            flexDirection=\"column\"\n            justifyContent=\"center\"\n            flexGrow={1}\n          >\n            <Typography my={1} variant=\"h6\" fontWeight=\"700\">\n              업체명 : test\n            </Typography>\n            <Typography my={1} variant=\"h6\" fontWeight=\"700\">\n              이메일 : company@naver.com\n            </Typography>\n            <Typography my={1} variant=\"h6\" fontWeight=\"700\">\n              Tell : 02-xxxx-xxxx\n            </Typography>\n          </Box>\n        </Box>\n        <Box display=\"flex\" width=\"50%\">\n          <Box ml={6} flexGrow={1}>\n            <Typography mt={2} variant=\"h5\" fontWeight=\"800\">\n              유저 정보\n            </Typography>\n            <Typography ml={1} my={2} variant=\"h6\" fontWeight=\"700\">\n              이름 : test\n            </Typography>\n            <Typography ml={1} variant=\"h6\" fontWeight=\"700\">\n              유저 Email : user@naver.com\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n      <Box display=\"flex\" width=\"90%\">\n        <Box pl={10} width=\"50%\">\n          <Box my={4}>\n            <Typography variant=\"h5\" fontWeight=\"800\">\n              핸드캐리 등록 정보\n            </Typography>\n          </Box>\n          <Box ml={2}>\n            <Box\n              width=\"80%\"\n              height=\"100px\"\n              sx={{ border: \"1px solid black\" }}\n              my={2}\n            ></Box>\n            <Box\n              width=\"80%\"\n              height=\"100px\"\n              sx={{ border: \"1px solid black\" }}\n              my={2}\n            ></Box>\n            <Box\n              width=\"80%\"\n              height=\"100px\"\n              sx={{ border: \"1px solid black\" }}\n              my={2}\n            ></Box>\n            <Box\n              width=\"80%\"\n              height=\"100px\"\n              sx={{ border: \"1px solid black\" }}\n              my={2}\n            ></Box>\n          </Box>\n        </Box>\n        <Box pl={10} width=\"50%\">\n          <Box my={4}>\n            <Typography variant=\"h5\" fontWeight=\"800\">\n              관심있는 견적\n            </Typography>\n          </Box>\n          <Box ml={2}>\n            <Box\n              width=\"80%\"\n              height=\"100px\"\n              sx={{ border: \"1px solid black\" }}\n              my={2}\n            ></Box>\n            <Box\n              width=\"80%\"\n              height=\"100px\"\n              sx={{ border: \"1px solid black\" }}\n              my={2}\n            ></Box>\n            <Box\n              width=\"80%\"\n              height=\"100px\"\n              sx={{ border: \"1px solid black\" }}\n              my={2}\n            ></Box>\n            <Box\n              width=\"80%\"\n              height=\"100px\"\n              sx={{ border: \"1px solid black\" }}\n              my={2}\n            ></Box>\n          </Box>\n        </Box>\n      </Box>\n    </BaseBox>\n  );\n};\n\nexport default MyPage;\n",{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":5,"column":10,"nodeType":"157","messageId":"158","endLine":5,"endColumn":21},{"ruleId":"155","severity":1,"message":"159","line":6,"column":8,"nodeType":"157","messageId":"158","endLine":6,"endColumn":17},{"ruleId":"160","severity":1,"message":"161","line":193,"column":6,"nodeType":"162","endLine":193,"endColumn":39,"suggestions":"163"},{"ruleId":"155","severity":1,"message":"164","line":32,"column":13,"nodeType":"157","messageId":"158","endLine":32,"endColumn":16},{"ruleId":"160","severity":1,"message":"165","line":36,"column":6,"nodeType":"162","endLine":36,"endColumn":18,"suggestions":"166"},{"ruleId":"155","severity":1,"message":"167","line":3,"column":3,"nodeType":"157","messageId":"158","endLine":3,"endColumn":9},{"ruleId":"155","severity":1,"message":"168","line":24,"column":9,"nodeType":"157","messageId":"158","endLine":24,"endColumn":21},{"ruleId":"155","severity":1,"message":"169","line":23,"column":10,"nodeType":"157","messageId":"158","endLine":23,"endColumn":22},{"ruleId":"155","severity":1,"message":"170","line":23,"column":24,"nodeType":"157","messageId":"158","endLine":23,"endColumn":39},{"ruleId":"155","severity":1,"message":"171","line":6,"column":8,"nodeType":"157","messageId":"158","endLine":6,"endColumn":15},{"ruleId":"155","severity":1,"message":"172","line":1,"column":15,"nodeType":"157","messageId":"158","endLine":1,"endColumn":19},{"ruleId":"155","severity":1,"message":"173","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":19},{"ruleId":"155","severity":1,"message":"174","line":3,"column":21,"nodeType":"157","messageId":"158","endLine":3,"endColumn":29},{"ruleId":"155","severity":1,"message":"172","line":1,"column":15,"nodeType":"157","messageId":"158","endLine":1,"endColumn":19},{"ruleId":"155","severity":1,"message":"175","line":1,"column":21,"nodeType":"157","messageId":"158","endLine":1,"endColumn":31},{"ruleId":"155","severity":1,"message":"176","line":1,"column":15,"nodeType":"157","messageId":"158","endLine":1,"endColumn":22},{"ruleId":"155","severity":1,"message":"177","line":1,"column":24,"nodeType":"157","messageId":"158","endLine":1,"endColumn":28},"no-new-object",["178"],"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'DoubleBox' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'BestList', 'CheapestList', and 'FastestList'. Either include them or remove the dependency array.","ArrayExpression",["179"],"'key' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'moveResultPage'. Either include it or remove the dependency array.",["180"],"'Button' is defined but never used.","'handleChange' is assigned a value but never used.","'selectedDate' is assigned a value but never used.","'setSelectedDate' is assigned a value but never used.","'BaseBox' is defined but never used.","'Icon' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'IconButton' is defined but never used.","'Divider' is defined but never used.","'Grid' is defined but never used.","no-object-constructor",{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"Update the dependencies array to be: [BestList, CheapestList, FastestList, selectSorted, setSelectResultId]",{"range":"185","text":"186"},"Update the dependencies array to be: [moveResultPage, pageNumber]",{"range":"187","text":"188"},[3990,4023],"[BestList, CheapestList, FastestList, selectSorted, setSelectResultId]",[994,1006],"[moveResultPage, pageNumber]"]